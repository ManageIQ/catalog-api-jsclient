/**
 * Catalog API
 * This API gets and orders catalog items from different cloud sources.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Portfolio model module.
 * @module model/Portfolio
 * @version 0.1.0
 */
class Portfolio {
    /**
     * Constructs a new <code>Portfolio</code>.
     * @alias module:model/Portfolio
     * @param name {String} 
     * @param description {String} 
     */
    constructor(name, description) { 
        
        Portfolio.initialize(this, name, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description) { 
        obj['name'] = name;
        obj['description'] = description;
    }

    /**
     * Constructs a <code>Portfolio</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Portfolio} obj Optional instance to populate.
     * @return {module:model/Portfolio} The populated <code>Portfolio</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Portfolio();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('workflow_ref')) {
                obj['workflow_ref'] = ApiClient.convertToType(data['workflow_ref'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Portfolio.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Portfolio.prototype['name'] = undefined;

/**
 * @member {String} description
 */
Portfolio.prototype['description'] = undefined;

/**
 * @member {Boolean} enabled
 * @default false
 */
Portfolio.prototype['enabled'] = false;

/**
 * @member {String} image_url
 */
Portfolio.prototype['image_url'] = undefined;

/**
 * @member {String} workflow_ref
 */
Portfolio.prototype['workflow_ref'] = undefined;

/**
 * @member {String} owner
 */
Portfolio.prototype['owner'] = undefined;






export default Portfolio;

