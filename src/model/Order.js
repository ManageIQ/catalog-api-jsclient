/**
 * Catalog API
 * This API gets and orders catalog items from different cloud sources.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Order model module.
 * @module model/Order
 * @version 0.1.0
 */
class Order {
    /**
     * Constructs a new <code>Order</code>.
     * @alias module:model/Order
     */
    constructor() { 
        
        Order.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Order} obj Optional instance to populate.
     * @return {module:model/Order} The populated <code>Order</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Order();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('ordered_at')) {
                obj['ordered_at'] = ApiClient.convertToType(data['ordered_at'], 'Date');
            }
            if (data.hasOwnProperty('completed_at')) {
                obj['completed_at'] = ApiClient.convertToType(data['completed_at'], 'Date');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Order.prototype['id'] = undefined;

/**
 * @member {String} user_id
 */
Order.prototype['user_id'] = undefined;

/**
 * Current State of the order.
 * @member {module:model/Order.StateEnum} state
 */
Order.prototype['state'] = undefined;

/**
 * @member {Date} created_at
 */
Order.prototype['created_at'] = undefined;

/**
 * @member {Date} ordered_at
 */
Order.prototype['ordered_at'] = undefined;

/**
 * @member {Date} completed_at
 */
Order.prototype['completed_at'] = undefined;

/**
 * @member {String} owner
 */
Order.prototype['owner'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Order['StateEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "Ordered"
     * @const
     */
    "Ordered": "Ordered",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed"
};



export default Order;

