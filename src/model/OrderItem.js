/**
 * Catalog API
 * This API gets and orders catalog items from different cloud sources.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrderItem model module.
 * @module model/OrderItem
 * @version 0.1.0
 */
class OrderItem {
    /**
     * Constructs a new <code>OrderItem</code>.
     * @alias module:model/OrderItem
     * @param count {Number} 
     * @param serviceParameters {Object} 
     * @param providerControlParameters {Object} The provider specific parameters needed to provision this service. This might include namespaces, special keys.
     * @param servicePlanRef {String} Stores the service plan ref from the Topology Service.
     * @param portfolioItemId {String} Stores the Portfolio Item ID.
     */
    constructor(count, serviceParameters, providerControlParameters, servicePlanRef, portfolioItemId) { 
        
        OrderItem.initialize(this, count, serviceParameters, providerControlParameters, servicePlanRef, portfolioItemId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, serviceParameters, providerControlParameters, servicePlanRef, portfolioItemId) { 
        obj['count'] = count;
        obj['service_parameters'] = serviceParameters;
        obj['provider_control_parameters'] = providerControlParameters;
        obj['service_plan_ref'] = servicePlanRef;
        obj['portfolio_item_id'] = portfolioItemId;
    }

    /**
     * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderItem} obj Optional instance to populate.
     * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('service_parameters')) {
                obj['service_parameters'] = ApiClient.convertToType(data['service_parameters'], Object);
            }
            if (data.hasOwnProperty('provider_control_parameters')) {
                obj['provider_control_parameters'] = ApiClient.convertToType(data['provider_control_parameters'], Object);
            }
            if (data.hasOwnProperty('service_plan_ref')) {
                obj['service_plan_ref'] = ApiClient.convertToType(data['service_plan_ref'], 'String');
            }
            if (data.hasOwnProperty('portfolio_item_id')) {
                obj['portfolio_item_id'] = ApiClient.convertToType(data['portfolio_item_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('ordered_at')) {
                obj['ordered_at'] = ApiClient.convertToType(data['ordered_at'], 'Date');
            }
            if (data.hasOwnProperty('completed_at')) {
                obj['completed_at'] = ApiClient.convertToType(data['completed_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
OrderItem.prototype['id'] = undefined;

/**
 * @member {Number} count
 * @default 1
 */
OrderItem.prototype['count'] = 1;

/**
 * @member {Object} service_parameters
 */
OrderItem.prototype['service_parameters'] = undefined;

/**
 * The provider specific parameters needed to provision this service. This might include namespaces, special keys.
 * @member {Object} provider_control_parameters
 */
OrderItem.prototype['provider_control_parameters'] = undefined;

/**
 * Stores the service plan ref from the Topology Service.
 * @member {String} service_plan_ref
 */
OrderItem.prototype['service_plan_ref'] = undefined;

/**
 * Stores the Portfolio Item ID.
 * @member {String} portfolio_item_id
 */
OrderItem.prototype['portfolio_item_id'] = undefined;

/**
 * Current state of this order item.
 * @member {module:model/OrderItem.StateEnum} state
 */
OrderItem.prototype['state'] = undefined;

/**
 * @member {Date} created_at
 */
OrderItem.prototype['created_at'] = undefined;

/**
 * @member {Date} ordered_at
 */
OrderItem.prototype['ordered_at'] = undefined;

/**
 * @member {Date} completed_at
 */
OrderItem.prototype['completed_at'] = undefined;

/**
 * @member {Date} updated_at
 */
OrderItem.prototype['updated_at'] = undefined;

/**
 * @member {String} owner
 */
OrderItem.prototype['owner'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
OrderItem['StateEnum'] = {

    /**
     * value: "Created"
     * @const
     */
    "Created": "Created",

    /**
     * value: "Ordered"
     * @const
     */
    "Ordered": "Ordered",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed",

    /**
     * value: "Completed"
     * @const
     */
    "Completed": "Completed"
};



export default OrderItem;

